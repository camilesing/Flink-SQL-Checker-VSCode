CREATE TEMPORARY VIEW tmp_view AS
select
  name as row_key,
  cast(id as BIGINT) as id,
  count(1) filter (
    where
      (
        event_no not in (
          '54126212',
          '54126213',
          '54126214',
          '54126215',
          '54126216',
          '54126217'
        )
        AND event_no = '101'
      )
  ) as f1,
  count(1) filter (
    where
      (
        event_no <> '60079992'
        or event_name <> '138'
      )
  ) as f2,
  count(1) filter (
    where
     event_name = 'trigger'
  ) as f3,
  sum(1) filter (
    where
      visit_type = 'look'
      and (
        event_no <> '54126210'
        or event_name = 'trigger2'
      )
  ) as f4,
  count(distinct name) filter (
    where
      TIMESTAMPDIFF(MINUTE, rowtime, LOCALTIMESTAMP) <= 10
      and  event_no <> '54126211'
  ) as f5,
  (
    case
      when country = 'China' then 8
      when country = 'US' then 20
      ELSE 0
    END
  ) as timezone,
  FLOOR(rowtime TO MINUTE) as dt,
  PROCTIME() as proctime
from
  source_table
where
  create_timestamp is not null
group by
  id,
  name;

insert into
  table1
select
  ARRAY [ ROW(
    f1,
    f2,
    f3,
    f4,
    f5
  )]  as message
from
  source_table;

CREATE TABLE source_table (
    application_id STRING,
    main_id STRING,
    province STRING,
    s_id STRING,
    areacode STRING,
    proctime AS PROCTIME()
) WITH (
    'connector' = 'filesystem',
    'path' = '/path/to/example.csv',
    'format' = 'csv'
);

-----------------------Time Travel
-- use timestamp constant expression
SELECT
  select_list
FROM
  paimon_tb FOR SYSTEM_TIME AS OF TIMESTAMP '2023-07-31 00:00:00';
--use expression with functions that can be reduced to a timestamp constant
SELECT
  select_list
FROM
  paimon_tb FOR SYSTEM_TIME AS OF TIMESTAMP '2023-07-31 00:00:00' - INTERVAL '1' DAY;